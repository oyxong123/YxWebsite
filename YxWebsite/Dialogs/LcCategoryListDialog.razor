@using Dtos;
@using Interfaces;
@inject ILcCategoryService ILcCategoryService
@inject Radzen.DialogService DialogService

<MudSimpleTable Hover>
    <thead>
        <tr>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (LcCategoryDto lcCategory in lcCategoryList)
        {
            <tr>
                <MudStack Row Justify="Justify.SpaceBetween" AlignItems="MudBlazor.AlignItems.Center">
                    <div class="d-flex justify-content-start flex-md-row">
                        <MudCardMedia Image="@lcCategory.ImageUrl" Height="100" Class="ml-4 mr-4" Style="background-size:contain; width: 100px" />
                        <MudText Align="Align.Center">@lcCategory.Name</MudText>
                    </div>
                     <div class="d-flex justify-content-end flex-md-row">
                        <MudIconButton OnClick="(() => EditLcCategory(lcCategory))" Icon="@Icons.Material.Filled.Edit" Color="Color.Success" />
                        <MudIconButton OnClick="(() => DeleteLcCategory(lcCategory))" Icon="@Icons.Material.Filled.Add" Color="Color.Success" />
                    </div>
                </MudStack>
            </tr>
        }
    </tbody>
</MudSimpleTable>

@code {
    private List<LcCategoryDto> lcCategoryList = new();

    protected override async Task OnInitializedAsync()
    {
        lcCategoryList = await ILcCategoryService.GetAllLcCategories();
        foreach (LcCategoryDto lcCategory in lcCategoryList)
        {
            lcCategory.ImageUrl = "data:image/jpeg;base64," + Convert.ToBase64String(lcCategory.Image);
        }
    }

    private void EditLcCategory(LcCategoryDto modifyinglcCategory)
    {
        modifyinglcCategory.Operation = "EDIT"; 
        DialogService.Close(modifyinglcCategory);
    }

    private async Task DeleteLcCategory(LcCategoryDto deletingLcCategory)
    {
        await ILcCategoryService.DeleteLcCategoryRecord(deletingLcCategory);
        deletingLcCategory.Operation = "DELETE";
        DialogService.Close(deletingLcCategory);
    }

}
