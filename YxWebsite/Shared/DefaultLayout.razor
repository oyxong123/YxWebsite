@inherits LayoutComponentBase
@using Dialogs;
@inject NavigationManager Nav
@inject Radzen.DialogService DialogService

<!--Overrides default blazor theme with mudblazor theme-->
<MudThemeProvider />
<MudSnackbarProvider />

<!--Add Radzen configurations for special popups-->
<RadzenDialog />
<RadzenNotification />
<RadzenContextMenu />
<RadzenTooltip />

<style>
    .mud-appbar
    {
        z-index: 900;
    }

    .mud-appbar.mud-appbar-dense.mud-toolbar-appbar
    {
        height: calc(var(--mud-appbar-height) - var(--mud-appbar-height)/6);
    }
</style>

<PageTitle>Yx Website</PageTitle>

<MudLayout class="page">
    <MudAppBar Fixed="true" Dense="true" Elevation="1" >
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    </MudAppBar>

    <MudDrawer Elevation="1" Anchor="Anchor.Left" Variant="@DrawerVariant.Temporary" @bind-Open="@_drawerOpen">
        <MudDrawerHeader>
            <MudNavLink Href="">Yx Website</MudNavLink>
        </MudDrawerHeader>
        <MudNavMenu>
            <CustomNavMenuItems MenuItems="@(new List<CustomNavMenuItems.MenuItem>
            {
                new(new CustomNavMenuItems.Link("oi oi-list-rich", "Home", "home")),
                new(new CustomNavMenuItems.Link("", "Spaces"), new List<CustomNavMenuItems.Link> {
                    new("oi oi-list-rich", "Music Square", "musicsquare"),
                    new("oi oi-list-rich", "Yx Talk", "yxtalk"),
                    new("oi oi-list-rich", "Language Cottage", "languagecottage"),
                    new("oi oi-list-rich", "Programming Life", "programminglife") }),
                new(new CustomNavMenuItems.Link("", "About Me"), new List<CustomNavMenuItems.Link> {
                    new("oi oi-list-rich", "About", "about")}),
                new(new CustomNavMenuItems.Link("", "Settings"), new List<CustomNavMenuItems.Link> {
                    new("oi oi-list-key", "Login", "", () => Login())})
            })" />

            <CustomNavMenuItems MenuItems="@(new List<CustomNavMenuItems.MenuItem>
            {
                
            })" />

            <!--only for admin-->
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent>
        <article class="content px-4">
            @Body
        </article>
    </MudMainContent>
</MudLayout>


@code {
    bool _drawerOpen = false;
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Login()
    {
        DrawerToggle();

        dynamic dialogResult = await DialogService.OpenAsync<LoginDialog>("Login", new Dictionary<string, object>() { { "IsSignUpMode", false } }, new Radzen.DialogOptions() { Height = "420px", Width = "500px" });
        if (dialogResult == "SignUp")
        {
            await Task.Delay(200);  // Buffer time for DialogService to close and reopen.
            await DialogService.OpenAsync<LoginDialog>("Sign Up", new Dictionary<string, object>() { { "IsSignUpMode", true } }, new Radzen.DialogOptions() { Height = "550px", Width = "500px" });
        }

        Nav.NavigateTo("", true);
    }
}
