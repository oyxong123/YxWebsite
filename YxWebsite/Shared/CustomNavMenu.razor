<MudNavMenu>
    @foreach (var item in this.MenuItems)
    {
        if (item.SubItems == null)
        {
            <MudNavLink Href="@item.Link.Url">
                <span class="@item.Link.Icon" aria-hidden="true" /> 
                @item.Link.Name
            </MudNavLink>
        }
        else
        {
            <MudNavGroup @ref="@this.subMenuItems[item.Link.Name]" Title="@item.Link.Name" ExpandedChanged="@(e => this.ToggleExpanded(e, item.Link.Name))">
                @foreach (var subItem in item.SubItems)
                {
                    <MudNavLink Href="@subItem.Url">
                        <span class="@subItem.Icon" aria-hidden="true" />
                        @subItem.Name
                    </MudNavLink>
                }
            </MudNavGroup>
        }
    }
</MudNavMenu>

@code {
    [Parameter] public List<MenuItem> MenuItems { get; set; } = new();
    private Dictionary<string, MudNavGroup> subMenuItems = new(); //what this for?
    public record MenuItem(Link Link, List<Link>? SubItems = null);
    public record Link(string Icon = "", string Name = "", string Url = "");

    private void ToggleExpanded(bool expanded, string itemName)
    {
        if (expanded)
        {
            foreach (var entry in this.subMenuItems.Where(entry => entry.Key != itemName))
            {
                entry.Value.Expanded = false;
            }
        }
    }
}